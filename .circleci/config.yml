version: 2.1

orbs:
  codacy: codacy/base@5.0.4

jobs:
  build: # runs not using Workflows must have a `build` job as entry point
    docker: # run the steps with Docker
      # CircleCI Go images available at: https://hub.docker.com/r/circleci/golang/
      - image: circleci/golang:1.15 #

    # directory where steps are run. Path must conform to the Go Workspace requirements
    working_directory: ~/workdir/helm-ssm

    environment: # environment variables for the build itself
      TEST_RESULTS: /tmp/test-results # path to where test results will be saved

    steps: # steps that comprise the `build` job
      - attach_workspace:
          at: ~/workdir/helm-ssm

      - run: mkdir -p $TEST_RESULTS # create the test results directory

      - restore_cache: # restores saved cache if no changes are detected since last run
      # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
          keys:
            - v2020-09-pkg-cache

      - run: go get github.com/jstemmer/go-junit-report

      - run:
          name: Run unit tests
          # Store the results of our tests in the $TEST_RESULTS directory
          command: |
            make test | go-junit-report >> ${TEST_RESULTS}/go-test-report.xml

      - run: make dist # pull and build dependencies for the project

      - add_ssh_keys:
          fingerprints:
            - "96:13:5b:d9:50:8f:a5:45:66:ed:80:9d:f9:0a:7c:75"

      - persist_to_workspace:
          root: ~/workdir/helm-ssm
          paths:
            - '*'

      - save_cache: # Store cache in the /go/pkg directory
          key: v1-pkg-cache
          paths:
            - "/go/pkg"

      - store_artifacts: # Upload test summary for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
          path: /tmp/test-results
          destination: raw-test-output

      - store_test_results: # Upload test results for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
          path: /tmp/test-results

  publish: # runs not using Workflows must have a `build` job as entry point
    docker: # run the steps with Docker
      # CircleCI Go images available at: https://hub.docker.com/r/circleci/golang/
      - image: circleci/golang:1.15 #

    # directory where steps are run. Path must conform to the Go Workspace requirements
    working_directory: ~/workdir/helm-ssm
    steps: # steps that comprise the `build` job
      - attach_workspace:
          at: ~/workdir/helm-ssm

      - run:
          name: "Publish Release on GitHub"
          command: |
            export VERSION="$(cat .version)"
            echo "Publishing version ${VERSION}"
            ls -lisah ./_dist/

            curl -L https://github.com/cli/cli/releases/download/v1.1.0/gh_1.1.0_linux_amd64.deb -o gh.deb
            sudo dpkg -i gh.deb
            echo ${GITHUB_TOKEN} | gh auth login --with-token
            gh config set prompt disabled
            gh release create ${VERSION} ./_dist/*.tgz

workflows:
  version: 2
  ci:
    jobs:
      - codacy/checkout_and_version
      - build:
          requires:
            - codacy/checkout_and_version
      - codacy/tag_version:
          name: tag_version
          requires:
            - build
          filters:
            branches:
              only:
                - master
      - publish:
          context: CodacyGitHub
          requires:
            - tag_version
      - codacy/tag_version:
          name: tag_version_latest
          version: latest
          force: true
          requires:
            - publish
